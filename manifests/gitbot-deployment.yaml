---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitbot
  labels:
    app.kubernetes.io/name: gitbot
spec:
  revisionHistoryLimit: 2
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: gitbot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitbot
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 30000
        runAsUser: 30000
        runAsGroup: 30000
        runAsNonRoot: true
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: gitbot
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: gitbot
      containers:
      - name: gitbot
        image: docker.io/lgtjpmora/gitbot:dev
        imagePullPolicy: Always
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        ports:
        - name: http
          containerPort: 8080
        envFrom:
          - secretRef:
              name: gitbot
        resources:
          requests:
            cpu: 10m
            memory: 256Mi
          limits:
            memory: 256Mi
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 3
          successThreshold: 2
          failureThreshold: 2
